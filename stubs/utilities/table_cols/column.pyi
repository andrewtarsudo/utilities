# -*- coding: utf-8 -*-
from typing import Iterator, NamedTuple
from utilities.table_cols.cell import TableCell


class TableColumnParameters(NamedTuple):
    index: int
    minimum_length: int
    preferred_length: int
    is_spaced: bool

    def __hash__(self): ...

    def __eq__(self, other): ...

    def __ne__(self, other): ...

    def __lt__(self, other): ...

    def __gt__(self, other): ...


class TableColumn(NamedTuple):
    table_cells: list[TableCell]
    column: int

    @property
    def name(self) -> str: ...

    def __iter__(self) -> Iterator[TableCell]: ...

    def __len__(self) -> int: ...

    @property
    def num_cells(self) -> int: ...

    def __getitem__(self, item) -> TableCell | list[TableCell]: ...

    def is_spaced(self): ...

    def minimum_length(self) -> int: ...

    def preferred_length(self) -> int: ...

    def __hash__(self): ...

    def __eq__(self, other): ...

    def __ne__(self, other): ...

    def __lt__(self, other): ...

    def __gt__(self, other): ...

    def __le__(self, other): ...

    def __ge__(self, other): ...

    def column_parameters(self): ...
