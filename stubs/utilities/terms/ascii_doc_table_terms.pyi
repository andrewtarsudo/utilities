# -*- coding: utf-8 -*-
from typing import Iterable
from utilities.common.shared import StrPath as StrPath
from utilities.common.errors import TermsAsciiDocFileTableRowIndexError as TermsAsciiDocFileTableRowIndexError, \
    TermsEmptyFileError as TermsEmptyFileError, TermsInvalidTermIndexError as TermsInvalidTermIndexError
from utilities.common.functions import ReaderMode as ReaderMode, file_reader as file_reader
from utilities.terms.table import TableCellCoordinate as TableCellCoordinate, TableItem as TableItem, Term as Term


class AsciiDocTableTerms:
    def __init__(self, lines: Iterable[str] = None) -> None: ...

    @classmethod
    def from_file(cls, file_path: StrPath): ...

    def set_terms(self) -> None: ...

    def __getitem__(self, item): ...

    def get(self, item): ...

    def __contains__(self, item) -> bool: ...

    def __len__(self) -> int: ...

    def __iter__(self): ...

    def terms_short(self) -> tuple[str, ...]: ...

    @property
    def max_row(self) -> int: ...

    def complete(self) -> None: ...

    @property
    def dict_terms(self): ...
