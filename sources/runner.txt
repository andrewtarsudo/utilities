#!/usr/bin/env python3
# -*- coding: utf-8 -*-

if __name__ == '__main__':
    from os import execv
    from pathlib import Path
    from time import sleep

    from click.termui import echo, pause

    args: list[str] = ${args}

    old_file: Path = Path(r${old_file}).expanduser()
    new_file: Path = Path(r${new_file}).expanduser()

    sleep(5.0)
    break_flag: bool = False
    attempts: int = 3

    while not break_flag and attempts > 0:
        try:
            old_file.unlink(missing_ok=True)

        except PermissionError:
            sleep(5.0)
            attempts -= 1

        else:
            break_flag: bool = True

    def fail():
        echo(
            "Не удалось автоматически заменить старый exe-файл на новый ..."
            "\nРекомендуется заменить его вручную.")
        pause(
            f"Новый файл находится по пути: {new_file.as_posix()}"
            f"\nФайл для замены: {old_file.as_posix()}")

    if attempts <= 0 and not break_flag:
        fail()

    else:
        try:
            file: Path = new_file.rename(old_file)
            file.chmod(0o775, follow_symlinks=True)

            echo("Исполняемый файл обновлен. Перезапуск файла...\n")
            sleep(2.5)

            execv(args[0], args)

        except FileNotFoundError as e:
            echo(f"Файл для переименования {e.filename} не найден")
            fail()

        except PermissionError as e:
            echo(
                f"{e.__class__.__name__}: недостаточно прав для чтения файла {e.filename}"
                f"\nДоступ: {new_file.stat().st_mode}")
            fail()

        except OSError as e:
            echo(f"Ошибка {e.__class__.__name__}: {e.strerror}")
            fail()

